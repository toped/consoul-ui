{"version":3,"file":"component---src-pages-lobby-js-c4683a42cf1cf21f574a.js","mappings":"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","sources":["webpack://gatsby-apollo-starter/./node_modules/@apollo/client/react/data/SubscriptionData.js","webpack://gatsby-apollo-starter/./utils/graphql/subscriptions.js","webpack://gatsby-apollo-starter/./src/components/Lobby.js","webpack://gatsby-apollo-starter/./node_modules/@apollo/client/react/hooks/useSubscription.js","webpack://gatsby-apollo-starter/./src/pages/lobby.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { OperationData } from \"./OperationData.js\";\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign(__assign({}, currentResult), {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy,\n      context: options.context\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var _this = this;\n\n    Promise.resolve().then(function () {\n      var onSubscriptionComplete = _this.getOptions().onSubscriptionComplete;\n\n      if (onSubscriptionComplete) onSubscriptionComplete();\n\n      _this.endSubscription();\n    });\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nexport { SubscriptionData };","import gql from 'graphql-tag'\n\nexport const ROOM_SUBSCRIPTION = gql`\n  subscription roomUpdated($slug: String!){\n    roomUpdated(slug: $slug){\n      id\n      host\n      slug\n      settings {\n        timeLimit\n        maxPlayers\n        rounds\n      }\n    }\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport  Link from 'gatsby-link'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\nimport { navigate } from 'gatsby'\nimport { toaster } from 'evergreen-ui'\n\nimport { FullPageDiv } from '../components/styled-components/FullPageDiv'\nimport { Typography, Button, PlayerList } from './primitives'\nimport { formatters } from '../../utils/functions'\nimport { withFirebaseAuthentication } from './hocs/withFirebaseAuthentication'\nimport { DELETE_ROOM } from '../../utils/graphql/mutations'\nimport { ROOM_SUBSCRIPTION } from '../../utils/graphql/subscriptions'\n\nconst RoomSettings = ({room}) => {\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\troom?.settings && Object.keys(room.settings).map(settingKey => {\n\t\t\t\t\treturn <Typography key={settingKey} variant=\"p\">{settingKey}: {room?.settings[settingKey]}</Typography>\n\t\t\t\t})\n\t\t\t}\n\t\t</>\n\t)\n}\n\nRoomSettings.propTypes = {\n\troom: PropTypes.object\n}\n\nconst Lobby = ({ user, room }) => {\n\t\n\tconst [deleteRoomMutation, {loading: loadingRoomDeletion}] = useMutation(\n\t\tDELETE_ROOM, {\n\t\t\tonCompleted: (data) => {\n\t\t\t\t//navigate to home\n\t\t\t\tnavigate('/') \n\t\t\t},\n\t\t\tonError: (err) => {\n\t\t\t\ttoaster.danger(formatters.extractGQLErrorMessage(err))\n\t\t\t}\n\t\t}\n\t)\n\n\tconst deleteRoom = () => {\n\t\tdeleteRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\thost:  user.uid\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tconst { data, loading } = useSubscription(\n\t\tROOM_SUBSCRIPTION,\n\t\t{\n\t\t\tvariables: { slug:'EYT1o' },\n\t\t\tonSubscriptionData: ({ subscriptionData }) => {\n\t\t\t\tconsole.log(subscriptionData.data)\n\t\t\t}\n\t\t}\n\t)\n\n\n\treturn (\n\t\t<FullPageDiv>\n\t\t\t<Typography variant=\"h3\">Wait here for host to start game...</Typography>\n\t\t\t<RoomSettings room={room} />\n\t\t\t<PlayerList />\n\t\t\t<Link to=\"/\">\n\t\t\t\t<Button className=\"mb-4\" outline>Back to home</Button>\n\t\t\t</Link>\n\t\t\t{\n\t\t\t\tuser.uid === room?.host\n\t\t\t\t\t? <Button className=\"mb-4\" color='Crimson' outline onClick={deleteRoom} loading={loadingRoomDeletion}>End game</Button>\n\t\t\t\t\t: null\n\t\t\t}\n\t\t</FullPageDiv>\n\t)\n}\n\nLobby.propTypes = {\n\troom: PropTypes.object,\n\tuser: PropTypes.object\n}\n\nexport default withFirebaseAuthentication(Lobby)\n","import { __assign } from \"tslib\";\nimport \"../../utilities/globals/index.js\";\nimport { useContext, useState, useRef, useEffect, useReducer } from 'react';\nimport { SubscriptionData } from \"../data/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { useAfterFastRefresh } from \"./utils/useAfterFastRefresh.js\";\nexport function useSubscription(subscription, options) {\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _a[1];\n\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _b = useState({\n    loading: !updatedOptions.skip,\n    error: void 0,\n    data: void 0\n  }),\n      result = _b[0],\n      setResult = _b[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n\n  if (__DEV__) {\n    useAfterFastRefresh(forceUpdate);\n  }\n\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return function () {\n      subscriptionData.cleanup();\n      subscriptionDataRef.current = void 0;\n    };\n  }, []);\n  return subscriptionData.execute(result);\n}","import React from 'react'\nimport SEO from '../components/seo'\n\nimport Lobby from '../components/Lobby'\nimport { Layout } from '../Layout'\n\nconst Content = () => (\n\t<>\n\t\t<SEO title=\"Join Game\" />\n\t\t<Lobby/>\n\t</>\n)\n\n\nconst LobbyPage = () => ( \n\t<Layout\n\t\ttitle=\"Join Game\"\n\t\tcontent={<Content/>}\n\t/>\n)\n\nexport default LobbyPage\n"],"names":["SubscriptionData","_super","_a","options","context","setResult","_this","call","this","currentObservable","initialize","prototype","execute","result","getOptions","skip","cleanup","loading","error","undefined","data","variables","currentResult","refreshClient","isNew","getLoadingResult","shouldResubscribe","previousOptions","Object","keys","length","subscription","startSubscription","afterExecute","isMounted","endSubscription","query","client","subscribe","fetchPolicy","next","updateCurrentData","bind","updateError","complete","completeSubscription","updateResult","onSubscriptionData","subscriptionData","Promise","resolve","then","onSubscriptionComplete","unsubscribe","ROOM_SUBSCRIPTION","gql","RoomSettings","room","settings","map","settingKey","key","variant","withFirebaseAuthentication","forceUpdate","updatedOptions","_b","subscriptionDataRef","user","useMutation","DELETE_ROOM","onCompleted","navigate","onError","err","toaster","formatters","deleteRoomMutation","loadingRoomDeletion","slug","console","log","useReducer","x","useContext","useState","useRef","current","setOptions","__DEV__","useAfterFastRefresh","useEffect","FullPageDiv","to","className","outline","uid","host","color","onClick","Content","title","content"],"sourceRoot":""}