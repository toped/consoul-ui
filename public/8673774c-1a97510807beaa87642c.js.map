{"version":3,"file":"8673774c-1a97510807beaa87642c.js","mappings":"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","sources":["webpack://gatsby-apollo-starter/./node_modules/@firebase/database/dist/index.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar firebase = require('@firebase/app');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return util.jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (util.contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new logger$1.Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = util.stringToByteArray(str);\n  var sha1 = new util.Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return util.base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += util.stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = logger$1.LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\n\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], varArgs));\n  };\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.error(message);\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} varArgs\r\n */\n\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (util.isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return util.stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += util.stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) {\n      return this.pieces_[this.pieces_.length - 1];\n    }\n\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n      }\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) {\n          pieces.push(childPieces[i]);\n        }\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n\n    if (leftKeys.length === rightKeys.length) {\n      return 0;\n    }\n\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += util.stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += util.stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= util.stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    util.assert(typeof type === 'string', 'typeof type must == string');\n    util.assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\n\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  util.contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && util.stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    util.validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    util.validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\n\nvar nextPushId = function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'; // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    util.assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    util.assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    util.assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && util.contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      util.assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = util.safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return util.contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = tslib.__assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = tslib.__assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\n      var index = util.safeGet(_this.indexSet_, indexName);\n      util.assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = util.map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    util.assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  tslib.__extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  util.assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (util.contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    util.validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + util.stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return util.contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    util.assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n      }\n    } else {\n      util.assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    util.validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    util.validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    util.validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    util.validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    util.validateCallback('Query.off', 2, callback, true);\n    util.validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param failureCallbackOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    util.validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    util.validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new util.Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    util.validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      util.validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      util.validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(util.errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = this.path_.child(childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      util.assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    util.assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = path.getFront();\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    util.assert(type === Change.CHILD_ADDED || type === Change.CHILD_CHANGED || type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.delete(childKey);\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw util.assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw util.assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey === '.priority') {\n          util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw util.assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    util.assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = tslib.__read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views.delete(viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views.delete(queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    each(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param path The path to check for\r\n   * @return Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param path The path to get a complete write\r\n   * @return The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param node The node to apply this CompoundWrite to\r\n   * @return The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  };\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  return CompoundWrite;\n}();\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && writeRecord.path.child(childName).contains(path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          } else ;\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = util.safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          } else ;\n        } else {\n          throw util.assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        each(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!util.contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return util.deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = tslib.__assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && util.contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} varArgs\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = tslib.__spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    util.assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !util.isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (util.isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = util.base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (util.isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = util.stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!util.isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (util.isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!util.isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (util.isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = util.jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    util.assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n        if (conn === _this.rx_) {\n          _this.onPrimaryMessageReceived_(message);\n        } else if (conn === _this.secondaryConn_) {\n          _this.onSecondaryMessageReceived_(message);\n        } else {\n          _this.log_('message on old connection');\n        }\n      }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n      this.tryStartUpgrade_();\n    }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.log_('sending ping on primary.');\n      this.sendData_({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n      this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n      this.log_('Closing realtime connection.');\n      this.state_ = 2\n      /* DISCONNECTED */\n      ;\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !util.isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(util.stringify(msg));\n    util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = util.safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || util.isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + util.stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + util.stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (util.isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (util.isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (util.isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (util.isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return util.isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (util.safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + util.querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = util.jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\n    var _this = this;\n\n    this.repoInfo_ = repoInfo_;\n    this.app = app;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null;\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          util.stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    authTokenProvider.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    });\n    this.transactionsInit_(); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  }\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = util.map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = util.map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (util.isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    util.assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    util.assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  tslib.__extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    util.validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) {\n      return null;\n    } else {\n      return this.path.getBack();\n    }\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    util.validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    util.validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    util.validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    util.validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    util.validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    util.validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    util.validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    util.validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    util.validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new util.Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    util.validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    util.validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    util.validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = path.getFront();\n\n    while (next !== null) {\n      var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n      next = path.getFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = util.contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\r\n * @enum {number}\r\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nRepo.prototype.transactionsInit_ = function () {\n  /**\r\n   * Stores queues of outstanding transactions for Firebase locations.\r\n   *\r\n   * @type {!Tree.<Array.<!Transaction>>}\r\n   * @private\r\n   */\n  this.transactionQueueTree_ = new Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n  this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = TransactionStatus.RUN;\n    var queueNode = this.transactionQueueTree_.subTree(path);\n    var nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n    queueNode.setValue(nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && util.contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = util.safeGet(newVal, '.priority');\n      util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    priorityForNode\n    /** @type {null|number|string} */\n    = priorityForNode;\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    this.sendReadyTransactions_();\n  }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\n  return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendReadyTransactions_ = function (node) {\n  var _this = this;\n\n  if (node === void 0) {\n    node = this.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    var queue = this.buildTransactionQueue_(node);\n    util.assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === TransactionStatus.RUN;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(function (childNode) {\n      _this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\n  var _this = this; // Mark transactions as sent and increment retry count!\n\n\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = this.getLatestState_(path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    _this.log_('transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n      // the callback could trigger more transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = TransactionStatus.COMPLETED;\n        events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(_this, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n      _this.sendReadyTransactions_();\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n          } else {\n            queue[i].status = TransactionStatus.RUN;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.NEEDS_ABORT;\n          queue[i].abortReason = status;\n        }\n      }\n\n      _this.rerunTransactions_(path);\n    }\n  }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactions_ = function (changedPath) {\n  var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  var path = rootMostTransactionNode.path();\n  var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n  return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = Path.relativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n    } else if (transaction.status === TransactionStatus.RUN) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && util.contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = this.generateServerValues();\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n\n  var transactionNode = this.transactionQueueTree_;\n  front = path.getFront();\n\n  while (front !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n    front = path.getFront();\n  }\n\n  return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n  var _this = this;\n\n  var nodeQueue = node.getValue();\n\n  if (nodeQueue !== null) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(function (child) {\n    _this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n  var _this = this;\n\n  var queue = node.getValue();\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(function (childNode) {\n    _this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactions_ = function (path) {\n  var _this = this;\n\n  var affectedPath = this.getAncestorTransactionNode_(path).path();\n  var transactionNode = this.transactionQueueTree_.subTree(path);\n  transactionNode.forEachAncestor(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  this.abortTransactionsOnNode_(transactionNode);\n  transactionNode.forEachDescendant(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\n  var queue = node.getValue();\n\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n        util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\n    var dbUrl = url || app.options.databaseURL;\n\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = util.safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.repoInfo_.toURLString()];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = util.safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = util.safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repo_\r\n   */\n  function Database(repo_) {\n    this.repo_ = repo_;\n\n    if (!(repo_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n    /** @type {Reference} */\n\n\n    this.root_ = new Reference(repo_, Path.Empty);\n    this.INTERNAL = new DatabaseInternals(this);\n  }\n\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    util.validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    util.validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repo_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    util.validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    util.validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n\nvar DatabaseInternals =\n/** @class */\nfunction () {\n  /** @param {!Database} database */\n  function DatabaseInternals(database) {\n    this.database = database;\n  }\n  /** @return {Promise<void>} */\n\n\n  DatabaseInternals.prototype.delete = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.database.checkDeleted_('delete'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        RepoManager.getInstance().deleteRepo(this.database.repo_); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.database.repo_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return DatabaseInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.6.13\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (util.isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase__default['default']);\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;"],"names":["Object","defineProperty","exports","value","firebase","tslib","util","logger$1","component","_interopDefaultLegacy","e","id","firebase__default","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bias","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","FORGE_DOMAIN","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","app","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","_forceRestClient","registerDatabase","instance","setSDKVersion","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","module"],"sourceRoot":""}