{"version":3,"file":"component---src-pages-play-js-b9f4b679a33a78f984dd.js","mappings":"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","sources":["webpack://gatsby-apollo-starter/./src/components/Lobby.js","webpack://gatsby-apollo-starter/./src/components/styled-components/GameStageLeft.js","webpack://gatsby-apollo-starter/./src/components/styled-components/SmallText.js","webpack://gatsby-apollo-starter/./src/components/styled-components/GameStageRight.js","webpack://gatsby-apollo-starter/./src/components/styled-components/MemeFrame.js","webpack://gatsby-apollo-starter/./src/components/GameRoom.js","webpack://gatsby-apollo-starter/./utils/graphql/subscriptions.js","webpack://gatsby-apollo-starter/./src/pages/play.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport  Link from 'gatsby-link'\nimport { useMutation } from '@apollo/react-hooks'\nimport { navigate } from 'gatsby'\nimport { toaster } from 'evergreen-ui'\n\nimport { FullPageDiv } from '../components/styled-components/FullPageDiv'\nimport { Typography, Button, PlayerList } from './primitives'\nimport { formatters } from '../../utils/functions'\nimport { withFirebaseAuthentication } from './hocs/withFirebaseAuthentication'\nimport { DELETE_ROOM, UPDATE_ROOM } from '../../utils/graphql/mutations'\n\nconst RoomSettings = ({room}) => {\n\n\treturn (\n\t\t<div className=\"my-4 text-center\">\n\t\t\t{\n\t\t\t\troom?.settings && Object.keys(room?.settings).map(settingKey => {\n\t\t\t\t\treturn <Typography key={settingKey} variant=\"p\">{settingKey}: {room?.settings[settingKey]}</Typography>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nRoomSettings.propTypes = {\n\troom: PropTypes.object\n}\n\nconst Lobby = ({ user, room, subscribeToRoomUpdates, subscribeToDeletion }) => {\n\n\tuseEffect(() => {\n\t\tif (user?.uid && !room?.players.map(p => p.uid).includes(user.uid)) {\n\t\t\tif(room?.players.length < room?.settings.maxPlayers)\n\t\t\t\taddPlayer({\n\t\t\t\t\tdisplayName: user.displayName,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\tphoneNumber: user.phoneNumber,\n\t\t\t\t\tuid: user.uid\n\t\t\t\t})\n\t\t}\n\t\t\n\t\tif (user === null || !Object.keys(user).length) {\n\t\t\tconsole.log('allow play as guest')\n\t\t}\n\t}, [user])\n\n\tuseEffect(() => {\n\t\tconsole.log('lobby subscribing to room updates')\n\t\tsubscribeToRoomUpdates()\n\t\tsubscribeToDeletion()\n\t}, [])\n\n\tconst [updateRoomMutation] = useMutation(\n\t\tUPDATE_ROOM, {\n\t\t\tonError: (err) => {\n\t\t\t\ttoaster.danger(formatters.extractGQLErrorMessage(err))\n\t\t\t}\n\t\t}\n\t)\n\n\tconst addPlayer = (player) => {\n\t\tconsole.log('mutating room from lobby')\n\n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\tplayers: [\n\t\t\t\t\t\t\t...room?.players,\n\t\t\t\t\t\t\tplayer\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tconst removePlayer = (player) => {\n\t\tconsole.log('mutating room from lobby')\n\n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\tplayers: [\n\t\t\t\t\t\t\t...room?.players.filter(p=>p.uid !== player.uid)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tconst startGame = () => {\n\t\tconsole.log('mutating room from lobby')\n\n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\tstarted: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\n\tconst [deleteRoomMutation, {loading: loadingRoomDeletion}] = useMutation(\n\t\tDELETE_ROOM, {\n\t\t\tonCompleted: (data) => {\n\t\t\t\t//navigate to home\n\t\t\t\tnavigate('/') \n\t\t\t},\n\t\t\tonError: (err) => {\n\t\t\t\ttoaster.danger(formatters.extractGQLErrorMessage(err))\n\t\t\t}\n\t\t}\n\t)\n\n\tconst deleteRoom = () => {\n\t\tdeleteRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\thost:  user.uid\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\treturn (\n\t\t<FullPageDiv>\n\t\t\t<Typography variant=\"h3\" weight=\"bold\" className=\"m-0\">Wait here for others to join...</Typography>\n\t\t\t<Typography variant=\"h5\">The host will start the game soon.</Typography>\n\t\t\t<PlayerList players={room?.players} />\n\t\t\t<RoomSettings room={room} />\n\t\t\t<Link to=\"/\">\n\t\t\t\t<Button className=\"mb-4\" outline>Back to home</Button>\n\t\t\t</Link>\n\t\t\t{\n\t\t\t\tuser?.uid === room?.host\n\t\t\t\t\t? <Button className=\"mb-4\" color=\"MediumSeaGreen\" outline onClick={()=>startGame()}>Start Game</Button>\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t{\n\t\t\t\tuser?.uid === room?.host\n\t\t\t\t\t? <Button className=\"mb-4\" color='Crimson' outline onClick={deleteRoom} loading={loadingRoomDeletion}>End game</Button>\n\t\t\t\t\t: <Button className=\"mb-4\" color='Crimson' outline onClick={()=>removePlayer({uid:user?.uid})} loading={loadingRoomDeletion}>Leave game</Button>\n\t\t\t}\n\t\t</FullPageDiv>\n\t)\n}\n\nLobby.propTypes = {\n\troom: PropTypes.object,\n\tuser: PropTypes.object,\n\tsubscribeToRoomUpdates: PropTypes.func,\n\tsubscribeToDeletion: PropTypes.func\n}\n\nexport default withFirebaseAuthentication(Lobby)\n","import styled from 'styled-components'\nimport tw from 'twin.macro'\n\nexport const GameStageLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  padding: 3rem;\n  ${tw`w-full md:w-2/3`}\n  box-sizing: border-box;\n  background-color: ${({theme}) => theme.stageLeft};\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n`\n\nexport default GameStageLeft","import styled from 'styled-components'\n\nexport const SmallText = styled.p`\n  text-align: left;\n  color: rgba(0, 0, 0, 0.5);\n  font-size: 16px;\n  padding: 0;\n  margin: 0;\n`\n\nexport default SmallText","import styled from 'styled-components'\nimport tw from 'twin.macro'\n\nexport const GameStageRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 3rem;\n  ${tw`w-full md:w-1/3`}\n  box-sizing: border-box;\n  background-color: ${({ theme }) => theme.GameStageRight};\n  border-top: 3px solid ${({ theme }) => theme.stageLeft};\n\tborder-bottom: 3px solid ${({ theme }) => theme.stageLeft};\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n  overflow: hidden;\n`\n\nexport default GameStageRight","\nimport styled from 'styled-components'\n\nconst MemeFrame = styled.div`\n  display: flex;\n  background-color: ${({theme}) => theme.text};\n\tpadding: 4px;\n\tmargin: 2rem 1rem;\n  border-radius: 4px;\n\n\timg {\n    width: 100%;\n    border-radius: 4px;\n\n    /* The animation code */\n    @keyframes example {\n      from {\n        filter: blur(8px);\n      }\n      to {\n        filter: blur(0px);\n      }\n    }\n      filter: blur(18px);\n      animation-name: example;\n      animation-fill-mode: forwards;\n      animation-duration: .6s;\n      animation-delay: 1s;\n  }\n\n  /* Medium devices (tablets, 768px and up) */\n  @media (min-width: 768px) { \n    /* width: 300px; */\n\t}\n`\nexport default MemeFrame","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport { useMutation } from '@apollo/react-hooks'\nimport { toaster } from 'evergreen-ui'\n\nimport { FullPageDiv, GameStageLeft, GameStageRight, MemeFrame } from '../components/styled-components'\nimport { Typography, Countdown, Timer, LeaderboardList, CardSummary, TimesUp, Button, CaptionInput } from './primitives'\nimport { formatters } from '../../utils/functions'\nimport { Game, GameCard } from '../../utils/models'\nimport { withFirebaseAuthentication } from './hocs/withFirebaseAuthentication'\nimport { UPDATE_ROOM } from '../../utils/graphql/mutations'\n\nconst GameRoom = ({ user, signInLoading, room, subscribeToRoomUpdates, subscribeToDeletion }) => {\n\n\tconst [game, setGame] = useState(null)\n\n\tuseEffect(() => {\n\t\tconsole.log('lobby subscribing to room updates')\n\t\tsubscribeToRoomUpdates()\n\t\tsubscribeToDeletion()\n\t}, [])\n  \n\tuseEffect(() => {\n\t\tif (user?.uid && !room?.players.map(p => p.uid).includes(user.uid)) {\n\t\t\tnavigate('/lost')\n\t\t}\n\t\t\n\t\tif (!signInLoading && !Object.keys(user).length) {\n\t\t\tnavigate('/lost')\n\t\t}\n    \n\t\t// update game object on server\n\t\tif (user?.uid && user.uid === room.host) {\n\t\t\tif (!room.game) {\n\t\t\t\tupdateGameObject()\n\t\t\t} else {\n\t\t\t\tconsole.log('And we live->', room.game)\n\t\t\t}\n\t\t}\n\n\t}, [user])\n\n\tuseEffect(() => {\n\t\tif (room.game) {\n\t\t\tconst gameObj = new Game({\n\t\t\t\t...room.game,\n\t\t\t\tplayers: room.players\n\t\t\t})\n\n\t\t\tconsole.log(gameObj)\n\t\t\tsetGame(gameObj)\n\t\t}\n\t}, [room])\n  \n\tconst [updateRoomMutation] = useMutation(\n\t\tUPDATE_ROOM, {\n\t\t\tonError: (err) => {\n\t\t\t\ttoaster.danger(formatters.extractGQLErrorMessage(err))\n\t\t\t}\n\t\t}\n\t)\n  \n\tconst updateGameObject = (progress) => {\n\t\tlet currentRound\n\t\tlet currentTurn\n\n\t\tif (progress && room.game) {\n\t\t\tcurrentTurn = room.game.currentTurn < room.players.length ? room.game.currentTurn + 1 : null\n\t\t\tconsole.log('Current turn updating to ', currentTurn)\n\t\t\tcurrentRound = !currentTurn ? room.game.currentRound + 1 : room.game.currentRound\n\t\t\tconsole.log('Current round updating to ', currentRound)\n\n\t\t}\n\t\t\n\t\tconst gameObj = new Game({\n\t\t\trounds: room.settings.rounds,\n\t\t\ttimeLimit: room.settings.timeLimit,\n\t\t\tcurrentRound,\n\t\t\tcurrentTurn,\n\t\t\tplayers: room.players,\n\t\t\tgameOver: game?.lastRound\n\t\t})\n    \n\t\tconsole.log('mutating room from game room')\n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\ttriggerRound: true,\n\t\t\t\t\t\tgame: gameObj.toGraphQLModel\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\n\tconst submitCard = (text) => {\n\t\tlet cards = Object.assign([], game.cards || [])\n\t\tcards = cards.filter(c => c.user !== user.uid)\n\n\t\tconst newCard = new GameCard({\n\t\t\tuser: user.uid,\n\t\t\ttext\n\t\t})\n\n\t\tcards.push(newCard)\n\n\t\tconst gameObj = new Game({\n\t\t\t...game,\n\t\t\tcards\n\t\t})\n    \n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\tgame: gameObj.toGraphQLModel\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t) \n\t}\n\n\tconst revealCard = (uid) => {\n\t\tlet cards = Object.assign([], game.cards)\n\t\tcards = cards.map(c => (\n\t\t\tc.user === uid\n\t\t\t\t? {\n\t\t\t\t\t...c,\n\t\t\t\t\trevealed: true\n\t\t\t\t}\n\t\t\t\t: c\n\t\t))\n\n\t\tconst gameObj = new Game({\n\t\t\t...game,\n\t\t\tcards\n\t\t})\n    \n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\tgame: gameObj.toGraphQLModel\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t) \n\t}\n\n\tconst highlightCard = (uid) => {\n\t\tlet cards = Object.assign([], game.cards)\n\t\tcards = cards.map(c => (\n\t\t\tc.user === uid\n\t\t\t\t? {\n\t\t\t\t\t...c,\n\t\t\t\t\thighlighted: true\n\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\t...c,\n\t\t\t\t\thighlighted: false\n\t\t\t\t}\n\t\t))\n\n\t\tconst gameObj = new Game({\n\t\t\t...game,\n\t\t\tcards\n\t\t})\n    \n\t\tupdateRoomMutation(\n\t\t\t{\n\t\t\t\tvariables: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t...room,\n\t\t\t\t\t\tgame: gameObj.toGraphQLModel\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t) \n\t}\n\n  \n\treturn (\n\t\t<FullPageDiv>\n\t\t\t<div className=\"flex w-full h-full flex-col md:flex-row\">\n\t\t\t\t<GameStageLeft>\n\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!game?.countDownTime\n\t\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<Timer \n\t\t\t\t\t\t\t\t\tduration={game?.timeLimit}\n\t\t\t\t\t\t\t\t\tcurrentTick={game?.roundTime}\n\t\t\t\t\t\t\t\t\tcontrolled={true}\n\t\t\t\t\t\t\t\t\tradius={30}\n\t\t\t\t\t\t\t\t\tactive={Boolean(game?.roundTime)}\n\t\t\t\t\t\t\t\t\tonCompleted={()=>{}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t\t\t\t<Typography variant=\"h6\" weight=\"bold\" className=\"m-0\">{`Round ${game?.currentRound}`}</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"tiny\" weight=\"bold\" className=\"m-0\">{game?.currentPlayer.displayName}</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex flex-col flex-1 items-center w-full\">\n\t\t\t\t\t\t<MemeFrame>\n\t\t\t\t\t\t\t<img \n\t\t\t\t\t\t\t\tsrc=\"https://assetblast.b-cdn.net/wp-content/uploads/2021/09/Facebook-will-smith-e1632766993863.jpeg?aspect_ratio=13:6&width=360&quality=60\" \n\t\t\t\t\t\t\t\talt=\"\" />\n\t\t\t\t\t\t</MemeFrame>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!game?.gameOver\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tgame?.roundTimeElapsed\n\t\t\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<TimesUp>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\" weight=\"bold\" fon className=\"m-0\" fontFamily=\"Press_Start_2P\" color=\"red\">Time is up!!</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</TimesUp>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\troom?.host === user.uid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? <Button className=\"my-4\" color=\"MediumSeaGreen\" outline onClick={() => updateGameObject(true)}>Start Next Round</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: <Typography className=\"my-4\"  variant=\"tiny\" weight=\"normal\">Waiting for host to start the next round...</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t: game?.currentPlayer.uid === user.uid\n\t\t\t\t\t\t\t\t\t\t\t\t? <Typography className=\"my-4\"  variant=\"tiny\" weight=\"normal\"> Waiting for other players to submit a card...</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t: <CaptionInput submitCaption={(text) => submitCard(text)}/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<CardSummary\n\t\t\t\t\t\t\t\t\t\tactivePlayer={game?.currentPlayer}\n\t\t\t\t\t\t\t\t\t\tisActivePlayer={game?.currentPlayer.uid === user.uid}\n\t\t\t\t\t\t\t\t\t\tplayers={game?.players}\n\t\t\t\t\t\t\t\t\t\tcards={game?.cards}\n\t\t\t\t\t\t\t\t\t\trevealCard={(uid) => revealCard(uid)}\n\t\t\t\t\t\t\t\t\t\thighlightCard={(uid) => highlightCard(uid)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:<TimesUp>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h3\" weight=\"bold\" fon className=\"m-0\" fontFamily=\"Press_Start_2P\">Game Over!!</Typography>\n\t\t\t\t\t\t\t\t</TimesUp>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</GameStageLeft>\n\t\t\t\t<GameStageRight>\n\t\t\t\t\t<Typography variant=\"h4\" weight=\"bold\" className=\"m-0\">Leaderboard</Typography>\n\t\t\t\t\t<LeaderboardList players={room.players} />\n\t\t\t\t</GameStageRight>\n\t\t\t</div>\n\n\t\t\t{\n\t\t\t\tgame?.countDownTime\n\t\t\t\t\t? <Countdown count={game?.countDownTime} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t</FullPageDiv>\n\t)\n}\n\nGameRoom.propTypes = {\n\troom: PropTypes.object,\n\tuser: PropTypes.object,\n\tsignInLoading: PropTypes.bool,\n\tsubscribeToRoomUpdates: PropTypes.func,\n\tsubscribeToDeletion: PropTypes.func\n}\n\nexport default withFirebaseAuthentication(GameRoom)\n","import gql from 'graphql-tag'\n\nexport const ROOM_SUBSCRIPTION = gql`\n  subscription roomUpdated($slug: String!){\n    roomUpdated(slug: $slug){\n      id\n      host\n      slug\n      started\n      players{\n        displayName\n        email\n        photoURL\n        phoneNumber\n        uid\n        isHost\n      }\n      game {\n        rounds\n        timeLimit\n        currentRound\n        currentTurn\n        countDownTime\n        roundTime\n        roundTimeElapsed\n        gameOver\n        cards {\n          user\n          text\n          revealed\n          highlighted\n          selected\n        }\n      }\n      settings {\n        timeLimit\n        maxPlayers\n        rounds\n      }\n    }\n  }\n`\n\nexport const ROOM_DELETED_SUBSCRIPTION = gql`\n  subscription roomDeleted($slug: String!){\n    roomDeleted(slug: $slug){\n      id\n    }\n  }\n`\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport { useQuery } from '@apollo/react-hooks'\nimport { toaster } from 'evergreen-ui'\n\nimport SEO from '../components/seo'\nimport Lobby from '../components/Lobby'\nimport GameRoom from '../components/GameRoom'\nimport { Layout } from '../Layout'\nimport { withFirebaseAuthentication } from '../components/hocs/withFirebaseAuthentication'\nimport { ROOMS } from '../../utils/graphql/queries'\nimport { ROOM_SUBSCRIPTION, ROOM_DELETED_SUBSCRIPTION } from '../../utils/graphql/subscriptions'\n\nconst Content = ({room, subscribeToRoomUpdates, subscribeToDeletion}) => (\n\t<>\n\t\t<SEO title=\"Game\" />\n\t\t{\n\t\t\t!room.started\n\t\t\t\t?\n\t\t\t\t// render lobby\n\t\t\t\t<Lobby\n\t\t\t\t\troom={room}\n\t\t\t\t\tsubscribeToRoomUpdates={subscribeToRoomUpdates}\n\t\t\t\t\tsubscribeToDeletion={subscribeToDeletion}\n\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t// render game room\n\t\t\t\t<GameRoom\n\t\t\t\t\troom={room}\n\t\t\t\t\tsubscribeToRoomUpdates={subscribeToRoomUpdates}\n\t\t\t\t\tsubscribeToDeletion={subscribeToDeletion}\n\t\t\t\t/>\n\t\t}\n\t</>\n)\n\nContent.propTypes = {\n\troom: PropTypes.object,\n\tsubscribeToRoomUpdates: PropTypes.func,\n\tsubscribeToDeletion: PropTypes.func\n}\n\n\nconst GamePage = ({ user, signedIn, signInLoading, setUser, ...props }) => {\n\tif (props['*'] === '') navigate('/lost')\n\n\tconst {subscribeToMore,  data: roomData, loading: loadingRoom } = useQuery(ROOMS, {\n\t\tvariables: {\n\t\t\tslug: props['*']\n\t\t},\n\t\tonCompleted: (data) => {\n\t\t\t// console.log('completed room fetch')\n\t\t\tif (data.rooms.length === 0) {\n\t\t\t\tnavigate('/lost') // should probably have a dedicated room not found page\n\t\t\t}\n\t\t},\n\t\tonError: (err) => {\n\t\t\tconsole.error(err)\n\t\t},\n\t\tfetchPolicy: 'network-only'\n\t})\n\n\tconst subscribeToDeletion = () => {\n\t\tsubscribeToMore({\n\t\t\tdocument: ROOM_DELETED_SUBSCRIPTION,\n\t\t\tvariables: { slug: props['*'] },\n\t\t\tupdateQuery: (prev) => {\n\t\t\t\t\n\t\t\t\tnavigate('/') \n\t\t\t\ttoaster.danger('Game room closed!')\n\n\t\t\t\treturn Object.assign({}, prev, {\n\t\t\t\t\trooms: null\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tconst subscribeToRoomUpdates = () =>\n\t\tsubscribeToMore({\n\t\t\tdocument: ROOM_SUBSCRIPTION,\n\t\t\tvariables: { slug: props['*'] },\n\t\t\tupdateQuery: (prev, { subscriptionData }) => {\n\n\t\t\t\t// console.log('room data changed')\n\t\t\t\t// console.log(subscriptionData.data.roomUpdated.game)\n\t\t\t\tif (!subscriptionData.data) return prev\n\t\t\t\t\n\t\t\t\t// check players\n\t\t\t\tif (prev.rooms[0].host !== subscriptionData.data.roomUpdated.host) {\n\t\t\t\t\ttoaster.notify('Host reassigned!')\n\t\t\t\t}\n\t\t\t\telse if(JSON.stringify(prev.rooms[0].players) !== JSON.stringify(subscriptionData.data.roomUpdated.players)){\n\t\t\t\t\tif (prev.rooms[0].players.length < subscriptionData.data.roomUpdated.players.length) {\n\t\t\t\t\t\ttoaster.notify('Player joined!')\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoaster.warning('Player left!')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\treturn Object.assign({}, prev, {\n\t\t\t\t\trooms: [subscriptionData.data.roomUpdated]\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Game\"\n\t\t\tcontent={\n\t\t\t\t!loadingRoom && Array.isArray(roomData?.rooms) && roomData?.rooms.length\n\t\t\t\t\t? <Content\n\t\t\t\t\t\troom={roomData.rooms[0]}\n\t\t\t\t\t\tsubscribeToRoomUpdates={subscribeToRoomUpdates}\n\t\t\t\t\t\tsubscribeToDeletion={subscribeToDeletion}\n\t\t\t\t\t/>\n\t\t\t\t\t: null}\n\t\t\tisLoading={loadingRoom}\n\t\t/>\n\t)\n}\n\nGamePage.propTypes = {\n\t'*': PropTypes.string,\n\tuser: PropTypes.object,\n\tsignedIn: PropTypes.bool,\n\tsignInLoading: PropTypes.bool,\n\tsetUser: PropTypes.func\n}\n\nexport default withFirebaseAuthentication(GamePage)\n"],"names":["RoomSettings","room","className","settings","Object","keys","map","settingKey","key","variant","withFirebaseAuthentication","user","subscribeToRoomUpdates","subscribeToDeletion","useEffect","uid","players","p","includes","length","maxPlayers","addPlayer","displayName","email","photoURL","phoneNumber","console","log","updateRoomMutation","useMutation","UPDATE_ROOM","onError","err","toaster","formatters","player","variables","DELETE_ROOM","onCompleted","data","navigate","deleteRoomMutation","loadingRoomDeletion","loading","weight","to","outline","host","color","onClick","started","filter","styled","theme","stageLeft","GameStageRight","text","signInLoading","useState","game","setGame","updateGameObject","gameObj","Game","progress","currentRound","currentTurn","rounds","timeLimit","gameOver","lastRound","triggerRound","toGraphQLModel","FullPageDiv","countDownTime","duration","currentTick","roundTime","controlled","radius","active","Boolean","currentPlayer","src","alt","fon","fontFamily","roundTimeElapsed","submitCaption","cards","assign","c","newCard","GameCard","push","submitCard","activePlayer","isActivePlayer","revealCard","revealed","highlightCard","highlighted","count","ROOM_SUBSCRIPTION","gql","ROOM_DELETED_SUBSCRIPTION","Content","title","Lobby","signedIn","setUser","props","useQuery","ROOMS","slug","rooms","error","fetchPolicy","subscribeToMore","roomData","loadingRoom","Layout","content","Array","isArray","document","updateQuery","prev","subscriptionData","roomUpdated","JSON","stringify","isLoading"],"sourceRoot":""}