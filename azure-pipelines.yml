# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- develop

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '4cd223c7-09b4-4d2c-82af-100eac3e1851'

  # Web app name
  webAppName: 'consoullabs-ui'

  # Environment name
  environmentName: 'consoullabs-ui'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - script: |
        npm install yarn
        yarn install
        yarn build 
      displayName: 'yarn install and build'
      env:
        GATSBY_URL: $(GATSBY_URL)
        GATSBY_NODE_ENV: $(GATSBY_NODE_ENV)
        GATSBY_APP_NAME: $(GATSBY_APP_NAME)
        GATSBY_FIREBASE_API_KEY: $(GATSBY_FIREBASE_API_KEY)
        GATSBY_FIREBASE_AUTH_DOMAIN: $(GATSBY_FIREBASE_AUTH_DOMAIN)
        GATSBY_FIREBASE_DATABASE_URL: $(GATSBY_FIREBASE_DATABASE_URL)
        GATSBY_FIREBASE_PROJECT_ID: $(GATSBY_FIREBASE_PROJECT_ID)
        GATSBY_FIREBASE_STORAGE_BUCKET: $(GATSBY_FIREBASE_STORAGE_BUCKET)
        GATSBY_FIREBASE_MESSAGING_SENDER_ID: $(GATSBY_FIREBASE_MESSAGING_SENDER_ID)
        GATSBY_FIREBASE_APP_ID: $(GATSBY_FIREBASE_APP_ID)
        GATSBY_MEASUREMENT_ID: $(GATSBY_MEASUREMENT_ID)
        GATSBY_DEV_URL: $(GATSBY_DEV_URL)


    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: consoullabs-ui'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|12.13'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'
              AppSettings: '-Port 8000'
